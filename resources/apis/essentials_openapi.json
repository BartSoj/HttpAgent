{
  "openapi": "3.1.0",
  "info": {
    "title": "essentials",
    "summary": "Essential Agent API",
    "description": "This API is used for essential agent operation such as getting time, date, city, saving memory, adding schedule, interacting with the user",
    "version": "0.1.0"
  },
  "servers": [
    {
      "url": "http://127.0.0.1:8001"
    }
  ],
  "paths": {
    "/time": {
      "get": {
        "summary": "Get Time",
        "description": "Get the current time.\n\nReturns the current time.",
        "operationId": "get_time_time_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/date": {
      "get": {
        "summary": "Get Date",
        "description": "Get the current date.\n\nReturns the current date.",
        "operationId": "get_date_date_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/city": {
      "get": {
        "summary": "Get City",
        "description": "Get the current city.\n\nReturns the current city.",
        "operationId": "get_city_city_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/memory": {
      "get": {
        "summary": "Get Memory",
        "description": "Get all the saved memory.\n\nReturns the list of saved memories.",
        "operationId": "get_memory_memory_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      },
      "post": {
        "summary": "Save Memory",
        "description": "Save a new memory.\n\nStores the provided memory for later use in the conversation.",
        "operationId": "save_memory_memory_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MemoryModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/schedule": {
      "post": {
        "summary": "Add Schedule",
        "description": "Add a new schedule for later execution.\n\nAdd a schedule to invoke the assistant at a specific time with specific content. Can be used to schedule a reminder, notification, set a timer, alarm or any other time-based action.",
        "operationId": "add_schedule_schedule_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/send_message_to_user": {
      "post": {
        "summary": "Send Message To User",
        "description": "Send a message to the user.\n\nSends the provided message to the user.\nUse this endpoint as a way to respond to the user's messages.\nSend a message to the user whenever user asks for anything.",
        "operationId": "send_message_to_user_send_message_to_user_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserMessage"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/set_user_name": {
      "put": {
        "summary": "Set User Name",
        "description": "Set the user name.\n\nSets the user name to be used in the conversation.",
        "operationId": "set_user_name_set_user_name_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserNameModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/set_agent_name": {
      "put": {
        "summary": "Set Agent Name",
        "description": "Set the agent name.\n\nSets the agent name to be used in the conversation.",
        "operationId": "set_agent_name_set_agent_name_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentNameModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AgentNameModel": {
        "properties": {
          "agent_name": {
            "type": "string",
            "title": "Agent Name"
          }
        },
        "type": "object",
        "required": [
          "agent_name"
        ],
        "title": "AgentNameModel"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "MemoryModel": {
        "properties": {
          "memory": {
            "type": "string",
            "title": "Memory",
            "description": "String with the content that represents a memory and will be saved for later use in the conversation."
          }
        },
        "type": "object",
        "required": [
          "memory"
        ],
        "title": "MemoryModel"
      },
      "ScheduleModel": {
        "properties": {
          "time": {
            "type": "string",
            "title": "Time",
            "description": "The date and time when the assistant should be invoked. The date and time should be in ISO 8601 format.",
            "examples": [
              "2024-08-20T16:33:14Z",
              "2024-09-01T12:43:00Z"
            ]
          },
          "content": {
            "type": "string",
            "title": "Content",
            "description": "The content that should be sent to the assistant when it is invoked. It can inform the assistant about the action to be performed, the reminder message, the notification message, etc.",
            "examples": [
              "Reminder to take medicine",
              "Reminder me to call mom",
              "Wake up alarm"
            ]
          }
        },
        "type": "object",
        "required": [
          "time",
          "content"
        ],
        "title": "ScheduleModel"
      },
      "UserMessage": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message",
            "description": "String with the content of the message that is sent to the user"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "UserMessage"
      },
      "UserNameModel": {
        "properties": {
          "user_name": {
            "type": "string",
            "title": "User Name"
          }
        },
        "type": "object",
        "required": [
          "user_name"
        ],
        "title": "UserNameModel"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}